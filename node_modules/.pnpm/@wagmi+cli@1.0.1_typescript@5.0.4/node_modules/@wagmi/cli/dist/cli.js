#!/usr/bin/env node
import {
  package_default
} from "./chunk-3FPGL5QD.js";
import {
  error
} from "./chunk-RRJI3FMR.js";
import "./chunk-UICA3PK6.js";

// src/cli.ts
import { cac } from "cac";
var cli = cac("wagmi");
cli.command("generate", "generate code based on configuration").option("-c, --config <path>", "[string] path to config file").option("-r, --root <path>", "[string] root path").option("-w, --watch", "[boolean] watch for changes").example((name) => `${name} generate`).action(async (options) => {
  const { generate } = await import("./commands-ME7VXO7O.js");
  await generate(options);
});
cli.command("init", "create configuration file").option("-c, --config <path>", "[string] path to config file").option("-r, --root <path>", "[string] root path").example((name) => `${name} init`).action(async (options) => {
  const { init } = await import("./commands-ME7VXO7O.js");
  await init(options);
});
cli.help();
cli.version(package_default.version);
void (async () => {
  try {
    cli.parse(process.argv, { run: false });
    if (!cli.matchedCommand && cli.args.length === 0)
      cli.outputHelp();
    await cli.runMatchedCommand();
  } catch (error2) {
    error(`
${error2.message}`);
    process.exit(1);
  }
})();
